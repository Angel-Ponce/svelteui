---
group: 'svelteuidev-core'
packageGroup: '@svelteuidev/core'
title: Code
slug: /core/code/
category: 'typography'
description: 'Inline or block code without syntax highlight'
---

<script lang='ts'>
	import { Button } from '@svelteuidev/core'
	import data from '$components/core/Code/Code.svelte?raw&sveld'
	import APIDocs from '$components/Test/APIDocs/APIDocs.svelte'
	
	const tabs = ['one', 'two'];
	$: activeTab = 'one';
</script>

# {title}

{description}

<div style="gap: 1.25rem;" class="flex gap-5">
	<Button variant='gradient' size='md' radius='xl' on:click={() => (activeTab = tabs[0])}>Documentation</Button>
	<Button variant='gradient' size='md' radius='xl' on:click={() => (activeTab = tabs[1])}>Component Props</Button>
</div>

{#if activeTab === 'one'}

    ## Inline code

    By default, Code component renders inline `code` html element:

```svelte example
<script>
	import { Code } from '@svelteuidev/core';
</script>

<Code color="dark">This code will be inline</Code>
```

    ## Block code

    To render code in `pre` element pass `block` prop to Code component:

```svelte example
<script>
	import { Code } from '@svelteuidev/core';

	const codeForDemo = `
		const obj = {
			prop1: 'Hello',
			prop2: 'World'
		}`;
</script>

<Code block color="blue" copy message="hello">{codeForDemo}</Code>
```

    ## Custom color

    By default, code has gray color,
    you can change it to any color from [theme colors](/theming/extend-theme/#default-colors):

```svelte example
<script>
	import { Code } from '@svelteuidev/core';
</script>

<Code color="red">This will be inline</Code>
<Code color="teal">This will be inline</Code>
<Code color="blue">This will be inline</Code>
```

    ## Syntax highlight

    In case you need syntax highlighting like in all code examples on SvelteUI website, a [@sveltuidev/prism](/others/prism/) package will be available soon.

    {:else if activeTab === 'two'}
    <APIDocs manualForward {data} />

{/if}
