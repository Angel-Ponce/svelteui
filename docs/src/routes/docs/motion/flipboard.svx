---
group: 'svelteuidev-motion'
packageGroup: '@svelteuidev/motion'
title: 'Flipboard'
slug: /motion/flipboard/
category: 'transitions'
description: 'Flipboard transition effect for text'
---

<script lang='ts'>
    // style tags used
    import {Prism} from '@svelteuidev/prism'
    import {flipboard} from '@svelteuidev/motion'
    import {Button} from '@svelteuidev/core'

	let visible = false;

    const toggleVisible = () => {
        visible = !visible
    }
    
    const code = `
    <script>
        import {flipboard} from '@svelteuidev/motion'
        
        let visible = false;

        const toggleVisible = () => {
            visible = !visible
        }
    <\/script>

    <div>
        {#if visible}
	        <p transition:flipboard={{ duration: 1000 }}>Transition</p>
        {/if}
    </div>
    <Button on:click={toggleVisible}>{!visible ? 'Play Transition' : 'Stop Transition'}</Button>
    `;
</script>

# {title}

{description}

<hr/>

## Usage

<div style="padding-left: 1rem; padding-right: 1rem;" class='h-20 space border rounded-md shadow-md flex items-center justify-between px-2'>
    <div class="">
        {#if visible}
	        <p in:flipboard={{duration: 2000}}>Now the transition is playing</p>
            {:else}
            <p>Click the button to play the transition</p>
        {/if}
    </div>
    <Button on:click={toggleVisible}>{!visible ? 'Play Transition' : 'Stop Transition'}</Button>
</div>

The flipboard transition that displays text with a glitch like effect. Just like every other transition, it is triggered by an element entering or leaving the DOM as a result of a state change. If you attempt to use the flipboard transition on non text nodes, it will result in an error.

<Prism theme="twilight" language="tsx" message={code} block>{code}</Prism>

## Params

| Param    | Description                                                                                              |
| -------- | -------------------------------------------------------------------------------------------------------- |
| delay    | A number representing the duration before the transition starts (in milliseconds)                        |
| duration | A number representing the duration of the transition (in milliseconds)                                   |
| easing   | An easing function to be applied to the transition. Works with svelte easing and custom easing functions |

## TypeScript

You can import `FlipboardParams` interface type from `@svelteuidev/motion`:

```tsx
import type { FlipboardParams } from '@svelteuidev/motion';

export interface FlipboardParams {
	delay?: number;
	duration?: number;
	easing?: EasingFunction;
	css?: (t: number, u: number) => string;
	tick?: (t: number, u: number) => void;
}
```

## Definition

```tsx
function flipboard(node: HTMLElement, { delay, duration, easing }: FlipboardParams): TransitionConfig;
```
