---
group: 'svelteuidev-actions'
packageGroup: '@svelteuidev/actions'
title: 'use-click-outside'
slug: /actions/use-click-outside/
description: 'Triggers a callback when a user clicks outside of a given element'
---

# {title}

{description}

<hr/>

## Usage

```svelte example hideStyle
<script>
	import { clickoutside } from '@svelteuidev/actions';
	import { Button } from '@svelteuidev/core';

	let open = true;
</script>

<div use:clickoutside={{ enabled: open, callback: () => (open = false) }}>
	<Button on:click={() => (open = true)}>Open Modal</Button>
	{#if open}
		<div class="box">This is a modal</div>
	{:else}
		<div>There is no modal</div>
	{/if}
</div>

<style>
	.box {
		border: 2px solid gray;
		padding: 2rem;
	}
</style>
```

With the **{title}** action, a callback function will be fired whenever the user clicks outside of the dom node the action is applied to.

## Params

| Param    | Description                                                                    |
| -------- | ------------------------------------------------------------------------------ |
| enabled  | Sets the action to an enabled state if true, if false, action will not trigger |
| callback | The callback to be fired once the user clicks outside of the dom node          |

## Events

The **{title}** action does not dispatch any custom events`

```ts
// No events to display
```

## Definition

```ts
export function clickOutside(
	node: HTMLElement,
	params: { enabled: boolean; callback?: (node?: HTMLElement) => void }
): ReturnType<Action>;
```
