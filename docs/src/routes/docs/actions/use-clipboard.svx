---
group: 'svelteuidev-actions'
packageGroup: '@svelteuidev/actions'
title: 'use-clipboard'
slug: /actions/use-clipboard/
description: 'Copies text to the clipboard when dom element is clicked'
---

<script lang='ts'>  
    // style tags used
    import {Prism} from '@svelteuidev/prism'
    import {Button} from '@svelteuidev/core'
    import {clipboard} from '@svelteuidev/actions'

    let textToCopy = 'This message was copied'
    let copied = false
    
    const code = `
    <script>
        import {clipboard} from '@svelteuidev/actions'
        
        let textToCopy = 'This message was copied'
        let copied = false
    <\/script>

    <div 
        on:useclipboard={() => {
            copied = true
            setTimeout(function() {
                copied = false
            }, 1000);
        }}
        use:clipboard={textToCopy}
    >
    {#if copied}
        <Button color='green'>copied</Button>
    {:else}
        <Button>Click me to copy text</Button>    
    {/if}
    </div>
    `;
</script>

# {title}

{description}

<hr/>

## Usage

<div style="padding: 1rem;" class='h-max space border rounded-md shadow-md flex items-center justify-between px-2'>
    <div 
        on:useclipboard={() => {
            copied = true
            setTimeout(function() {
                copied = false
            }, 1000);
        }}
        use:clipboard={textToCopy}
    >
    {#if copied}
        <Button color='green'>copied</Button>
    {:else}
        <Button>Click me to copy text</Button>    
    {/if}
    </div>
</div>

With the **{title}** action, a callback function will be fired whenever the user clicks outside of the dom node the action is appplied to.

<Prism theme="twilight" language="tsx" message={code} block>{code}</Prism>

## Params

| Param | Description                                               |
| ----- | --------------------------------------------------------- |
| text  | The text that will be copied when the action is triggered |

## Events

The **{title}** action dispatches custom events. Each custom event takes a callback function just like other events `e.g. on:click={() => {}}`

```tsx
on:useclipboard?: (callback: (any) => unknown) => void;
on:useclipboard-error?: (callback: (any) => unknown) => void;
```

## Definition

```tsx
export function clipboard(node: HTMLElement, text: string): ReturnType<Action>;
```
