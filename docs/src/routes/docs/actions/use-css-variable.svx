---
group: 'svelteuidev-actions'
packageGroup: '@svelteuidev/actions'
title: 'use-css-variable'
slug: /actions/use-css-variable/
description: 'Whenever some of their values change, update css properties on the fly'
---

# {title}

{description}

<hr/>

## Usage

```svelte example
<script>
	import { Button } from '@svelteuidev/core';
	import { cssvariable } from '@svelteuidev/actions';

	let isRed = true;

	$: styleVars = {
		titleColor: isRed ? 'red' : 'blue'
	};
</script>

<div use:cssvariable={styleVars}>
	<!-- anything here will have access to var(--titleColor) -->
	<p>This text is normal</p>
	<p class="example">This text is using the variable</p>
</div>
<Button on:click={() => (isRed = !isRed)}>Click to switch colors</Button>

<style>
	.example {
		color: var(--titleColor);
	}
</style>
```

With the **{title}** action, an object of properties will be treated as css custom variables. By defining this object inside of a `$: {}` reactive block, {title} can update those css properties on the fly whenever some of its values change.

## Params

| Param | Description                                                          |
| ----- | -------------------------------------------------------------------- |
| props | The object that possesses the variables, and their associated values |

## Events

The **{title}** action does not dispatch any custom events`

```ts
// No events to display
```

## Definition

```ts
export function cssvariable(node: HTMLElement, props: UnknownKeyString<string>): ReturnType<Action>;
```
